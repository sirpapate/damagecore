E2Helper.Descriptions["runOnDmg"] = "If set to 1, E2 will run when an entity takes damage."
E2Helper.Descriptions["runOnDmg"] = "If set to 1, E2 will run when specified entity takes damage."
E2Helper.Descriptions["runOnDmg"] = "If set to 1, E2 will run when specified entities take damage."
E2Helper.Descriptions["trackDamage"] = "E2 will run when the specified entity takes damage."
E2Helper.Descriptions["stopTrackDamage"] = "E2 will no longer when the specified entity takes damage."
E2Helper.Descriptions["getDamageTrackedEntities"] = "Returns a array of all tracked entities."
E2Helper.Descriptions["isDamageTracked"] = "Returns 1 if the entity is tracked. Returns 0 otherwise."
E2Helper.Descriptions["dmgClk"] = "Returns 1 if the chip is being executed because of a damage event. Returns 0 otherwise"
E2Helper.Descriptions["lastDamage"] = "Returns the last damage."
E2Helper.Descriptions["lastDamageVictim"] = "Returns the victim of the last damage."

E2Helper.Descriptions["damage"] = "Makes an empty damage."
E2Helper.Descriptions["clone"] = "Returns a copy of the damage."
E2Helper.Descriptions["toTable"] = "Converts the damage into a table."
E2Helper.Descriptions["getDamage"] = "Returns damage."
E2Helper.Descriptions["getAttacker"] = "Returns the attacker of damage."
E2Helper.Descriptions["getForce"] = "Returns a vector representing the damage force."
E2Helper.Descriptions["getPosition"] = "Returns the position where the damage was or is going to be applied to"
E2Helper.Descriptions["getType"] = "Returns a bitflag which indicates the damage type of the damage."
E2Helper.Descriptions["getInflictor"] = "Returns the inflictor of the damage. This is not necessarily a weapon."
E2Helper.Descriptions["isBulletDamage"] = "Returns 1 if the damage was caused by a bullet."
E2Helper.Descriptions["isExplosionDamage"] = "Returns 1 if the damage contains explosion damage."
E2Helper.Descriptions["isFallDamage"] = "Returns 1 if the damage contains fall damage."
E2Helper.Descriptions["setDamage"] = "Sets the amount of damage. Returns itself."
E2Helper.Descriptions["setAttacker"] = "Sets the attacker of the damage. Returns itself."
E2Helper.Descriptions["setForce"] = "Sets the directional force of the damage. Returns itself."
E2Helper.Descriptions["setPosition"] = "Sets the position of where the damage gets applied to. Returns itself."
E2Helper.Descriptions["setType"] = "Sets the damage type. Returns itself."
E2Helper.Descriptions["setInflictor"] = "Sets the inflictor of the damage for example a weapon. Returns itself."

E2Helper.Descriptions["canDamage"] = "Returns if the owner can damage the target."
E2Helper.Descriptions["takeDamage"] = "Applies the damage specified by the damage info to the entity."
E2Helper.Descriptions["takeDamage"] = "Applies the specified amount of damage to the entity. (Damage Amount, Attacker)"
E2Helper.Descriptions["takeDamage"] = "Applies the specified amount of damage to the entity. (Damage Amount, Attacker, Inflictor)"
E2Helper.Descriptions["blastDamage"] = "Applies spherical damage based on damage info to all entities in the specified radius. (Damage, Position, Radius)"
E2Helper.Descriptions["blastDamage"] = "Applies explosion damage to all entities in the specified radius. (Attacker, Inflictor, Position, Radius, Damage Amount)"

E2Helper.Descriptions["dmgApplyDamage"] = "Legacy - Use entity:takeDamage(N) instead."
E2Helper.Descriptions["dmgDamage"] = "Legacy - Use lastDamage():getDamage() instead."
E2Helper.Descriptions["dmgVictim"] = "Legacy - Use lastDamageVictim() instead."
E2Helper.Descriptions["dmgAttacker"] = "Legacy - Use lastDamage():getAttacker() instead."
E2Helper.Descriptions["dmgPos"] = "Legacy - Use lastDamage():getPosition() instead."
E2Helper.Descriptions["dmgForce"] = "Legacy - Use lastDamage():getForce() instead."
E2Helper.Descriptions["dmgInflictor"] = "Legacy - Use lastDamage():getInflictor() instead."
E2Helper.Descriptions["dmgType"] = "Legacy - Use lastDamage():getType() instead."